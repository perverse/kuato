<?php

namespace App\Modules\{{module}}\Controllers;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Modules\{{module}}\Contracts\Services\{{class}}ServiceInterface;

class {{class}}Controller extends Controller
{
    /**
     *
     * @var \App\Modules\{{module}}\Services\{{class}}Service
     */
    protected ${{classLowercase}}Service;

    /**
     *
     * @var \Illuminate\Http\Request
     */
    protected $request;

    /**
     *
     * @param \Illuminate\Http\Request                                              $request
     * @param \App\Modules\{{module}}\Contracts\Services\{{class}}ServiceInterface  ${{classLowercase}}Service
     *
     * @return void
     */
	public function __construct(Request $request, {{class}}ServiceInterface ${{classLowercase}}Service)
	{
        $this->request = $request;
		$this->{{classLowercase}}Service = ${{classLowercase}}Service;
	}

    /**
     *
	 * @param  \Illuminate\Http\Request 	$request
     *
     * @return array
     */
	public function index()
	{
        return $this->{{classLowercase}}Service->lists($this->request->all());
	}

    /**
     *
	 * @param  int 	$id
     *
     * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
     *
     * @return array
     */
	public function show(int $id)
	{
        return $this->{{classLowercase}}Service->find($id);
	}

    /**
     *
     * @return array
     */ 
    public function store()
    {
        return $this->{{classLowercase}}Service->store($this->request->all());
    }

    /**
     * 
     * @param  int  $id
     * @param \Illuminate\Http\Request     $request
     *
     * @return array
     */ 
    public function update(int $id)
    {
        return $this->{{classLowercase}}Service->update($this->request->all());
    }

    /**
     * 
     * @param  int  $id
     *
     * @return array
     */ 
    public function delete(int $id)
    {
        return $this->{{classLowercase}}Service->delete($id);
    } 

}
